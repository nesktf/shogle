cmake_minimum_required(VERSION 3.10)

set(SHOGLE_VER_MAJ "0")
set(SHOGLE_VER_MIN "1")
set(SHOGLE_VER_REV "1")
execute_process(COMMAND git rev-parse --short HEAD
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  OUTPUT_VARIABLE GIT_TAG_SHORT
  OUTPUT_STRIP_TRAILING_WHITESPACE
)
execute_process(COMMAND git rev-list --count HEAD
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  OUTPUT_VARIABLE VERSION_BUILD
  OUTPUT_STRIP_TRAILING_WHITESPACE
)
execute_process(COMMAND git rev-parse --abbrev-ref HEAD
  WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
  OUTPUT_VARIABLE GIT_BRANCH
  OUTPUT_STRIP_TRAILING_WHITESPACE
)
set(SHOGLE_PROJECT_VERSION "${SHOGLE_VER_MAJ}.${SHOGLE_VER_MIN}.${SHOGLE_VER_REV}")
set(SHOGLE_VERSION "${SHOGLE_PROJECT_VERSION}-${VERSION_BUILD}-${GIT_TAG_SHORT} (${GIT_BRANCH})")

project(shogle VERSION ${SHOGLE_PROJECT_VERSION} LANGUAGES CXX C)

if (NOT DEFINED SHOGLE_USE_DEFAULT_CONFIG OR SHOGLE_USE_DEFAULT_FLAGS)
  message(STATUS "ShOGLE: Using default build config")
  set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
  set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -Wall -Wextra -Wpedantic -O0 -g2 -ggdb")
  set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -Wall -Wextra -Wpedantic -O3")
endif()

if (NOT DEFINED SHOGLE_RESOURCES_PATH)
  set(SHOGLE_RESOURCES_PATH "${CMAKE_CURRENT_SOURCE_DIR}/res")
  message(STATUS "ShOGLE: Using default resource directory: ${SHOGLE_RESOURCES_PATH}")
endif()

add_subdirectory(source)

# if (SHOGLE_BUILD_EXAMPLES)
  # add_subdirectory(example)
# endif()
